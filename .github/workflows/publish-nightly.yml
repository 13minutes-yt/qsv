name: Publish Nightly

on:
  workflow_dispatch:

jobs:
  analyze-tags:
    runs-on: ubuntu-latest
    outputs:
      previous-tag: ${{ steps.previoustag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      #▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼#
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      #▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲#

  publish:
    name: Publish for ${{ matrix.job.target }}
    needs: analyze-tags
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        rust: [nightly-2022-06-13]
        job:
          - os: ubuntu-latest
            os-name: linux
            target: x86_64-unknown-linux-gnu
            architecture: x86_64
            addl-build-args: --features=apply,generate,lua,fetch,foreach,python,nightly
            default-features:
          - os: ubuntu-latest
            os-name: linux
            target: x86_64-unknown-linux-musl
            architecture: x86_64
            musl-prep: true
            addl-build-args: --features=apply,generate,lua,fetch,foreach,python,nightly
            default-features:            
          - os: windows-latest
            os-name: windows
            target: x86_64-pc-windows-msvc
            architecture: x86_64
            addl-build-args: --features=apply,generate,lua,fetch,python,nightly
            default-features:
          - os: windows-latest
            os-name: windows
            target: x86_64-pc-windows-gnu
            architecture: x86_64
            addl-build-args: --features=apply,generate,lua,fetch,python,nightly
            default-features: --no-default-features 
          - os: macos-latest
            os-name: macos
            target: x86_64-apple-darwin
            architecture: x86_64
            addl-build-args: --features=apply,generate,lua,fetch,foreach,python,nightly
            default-features: --no-default-features 

    steps:
    - name: Installing Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        components: rust-src
        target: ${{ matrix.job.target }}
        override: true
        default: true
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ref: ${{ needs.analyze-tags.outputs.previous-tag }}
    - uses: actions/setup-python@v4.0.0
      with:
        python-version: '3.8'
    - name: build prep for x86_64-unknown-linux-musl
      if: ${{ matrix.job.musl-prep }}
      run: |
        sudo apt-get install musl-tools
    - name: Build qsv-nightly
      uses: actions-rs/cargo@v1
      with:
        command: build
        use-cross: false
        toolchain: ${{ matrix.rust }}
        args: --profile release-nightly --bin qsv -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target ${{ matrix.job.target }} ${{ matrix.job.addl-build-args }},full ${{ matrix.job.default-features }}
    - name: Build qsvlite-nightly
      uses: actions-rs/cargo@v1   
      with:
        command: build
        use-cross: false
        toolchain: ${{ matrix.rust }}
        args: --profile release-nightly --bin qsvlite -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --features=lite --target ${{ matrix.job.target }} ${{ matrix.job.default-features }}
    - name: Build qsvdp-nightly
      uses: actions-rs/cargo@v1
      with:
        command: build
        use-cross: false
        toolchain: ${{ matrix.rust }}
        args: --profile release-nightly --bin qsvdp -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --features=datapusher_plus --target ${{ matrix.job.target }} ${{ matrix.job.default-features }}
    - name: Copy binaries to working dir
      shell: bash
      run: |
        mkdir qsv-${{ needs.analyze-tags.outputs.previous-tag }}
        rm target/${{ matrix.job.target }}/release-nightly/*.d 
        cp target/${{ matrix.job.target }}/release-nightly/qsv* qsv-${{ needs.analyze-tags.outputs.previous-tag }}
        cd qsv-${{ needs.analyze-tags.outputs.previous-tag }}
        if [ "$RUNNER_OS" == "Windows"]; then
             mv qsv.exe qsv_nightly.exe
             mv qsvlite.exe qsvlite_nightly.exe
             mv qsvdp.exe qsvdp_nightly.exe
        else
             mv qsv qsv_nightly
             mv qsvlite qsvlite_nightly
             mv qsvdp qsvdp_nightly
        fi
        rustup show > qsv_nightly_rust_version_info.txt
        cd ..
    - name: Download latest release zip
      uses: robinraju/release-downloader@v1.3
      with:
        repository: "jqnatividad/qsv"
        latest: true
        token: ${{ secrets.GITHUB_TOKEN }}
        fileName: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-${{ matrix.job.target }}.zip
    - name: add nightly files to zip
      run: 7z a -tzip qsv-${{ needs.analyze-tags.outputs.previous-tag }}-${{ matrix.job.target }}.zip ./qsv-${{ needs.analyze-tags.outputs.previous-tag }}/qsv* -mx=9 -mmt=on
    - name: Upload zipped binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-${{ matrix.job.target }}.zip
        asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-${{ matrix.job.target }}.zip
        overwrite: true
        tag: ${{ needs.analyze-tags.outputs.previous-tag }}    
 
