name: Publish

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  analyze-tags:
    runs-on: ubuntu-latest
    outputs:
      previous-tag: ${{ steps.previoustag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0
      #▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼#
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      #▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲#

  publish:
    name: Publish for ${{ matrix.job.target }}
    needs: analyze-tags
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        rust: [stable]
        job:
          - os: ubuntu-latest
            os-name: linux
            target: x86_64-unknown-linux-gnu
            architecture: x86_64
            artifact_name: qsv*
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-x86_64-unknown-linux-gnu.zip
            use-cross: false
            strip: true
            addl-build-args: --features=apply,generate,lua,foreach,python
          - os: ubuntu-latest
            os-name: linux
            target: i686-unknown-linux-gnu
            architecture: i686
            artifact_name: qsv*
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-i686-unknown-linux-gnu.zip
            use-cross: true
            strip: true
            addl-build-args: --features=apply,generate,lua,foreach
          - os: windows-latest
            os-name: windows
            target: x86_64-pc-windows-msvc
            architecture: x86_64
            artifact_name: qsv*.exe
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-x86_64-pc-windows-msvc.zip
            use-cross: false
            strip: false
            addl-build-args: --features=apply,generate,lua,python
          - os: windows-latest
            os-name: windows
            target: i686-pc-windows-msvc
            architecture: i686
            artifact_name: qsv*.exe
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-i686-pc-windows-msvc.zip
            use-cross: true
            strip: false
            addl-build-args: --features=apply,generate,lua
          - os: windows-latest
            os-name: windows
            target: x86_64-pc-windows-gnu
            architecture: x86_64
            artifact_name: qsv*.exe
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-x86_64-pc-windows-gnu.zip
            use-cross: false
            strip: false
            addl-build-args: --no-default-features --features=apply,generate,lua,python
          - os: macos-latest
            os-name: macos
            target: x86_64-apple-darwin
            architecture: x86_64
            artifact_name: qsv*
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-x86_64-apple-darwin.zip
            use-cross: false
            strip: true
            addl-build-args: --features=apply,generate,lua,foreach,python
          - os: macos-latest
            os-name: macos
            target: aarch64-apple-darwin
            architecture: aarch64
            artifact_name: qsv*
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-aarch64-apple-darwin.zip
            build-prep: true
            use-cross: true
            strip: true
            addl-build-args: --features=apply,generate,lua,foreach
          - os: ubuntu-latest
            os-name: linux
            target: aarch64-unknown-linux-gnu
            architecture: aarch64
            artifact_name: qsv*
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-aarch64-unknown-linux-gnu.zip
            use-cross: true
            strip: false
            addl-build-args: --features=apply,generate,lua,foreach
          - os: ubuntu-latest
            os-name: linux
            target: arm-unknown-linux-gnueabihf
            architecture: arm
            artifact_name: qsv*
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-arm-unknown-linux-gnueabihf.zip
            use-cross: true
            strip: false
            addl-build-args: --no-default-features --features=apply,generate,lua,foreach
          - os: ubuntu-latest
            os-name: linux
            target: arm-unknown-linux-musleabihf
            architecture: arm
            artifact_name: qsv*
            asset_name: qsv-${{ needs.analyze-tags.outputs.previous-tag }}-arm-unknown-linux-musleabihf.zip
            use-cross: true
            strip: false
            addl-build-args: --no-default-features --features=apply,generate,lua,foreach

    steps:
    - name: Installing Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        target: ${{ matrix.job.target }}
        override: true
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        ref: ${{ needs.analyze-tags.outputs.previous-tag }}
    - name: DEBUG - Setup Python dev for linux
      if: ${{ matrix.job.os-name == 'linux' }}
      env:
        PYO3_PYTHON: /usr/bin/python3
        PYO3_PRINT_CONFIG: 1
      run: |
        echo $PYO3_PYTHON
        which python3
        which python
    - name: build prep for aarch64-apple-darwin
      if: ${{ matrix.job.build-prep }}
      run: |
        sudo xcode-select -s "/Applications/Xcode_12.5.1.app"
        sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
    - name: Cargo build
      uses: actions-rs/cargo@v1
      with:
        command: build
        use-cross: ${{ matrix.job.use-cross }}
        toolchain: ${{ matrix.rust }}
        args: --release --target ${{ matrix.job.target }} ${{ matrix.job.addl-build-args }}
    - name: strip binary on *nix environments
      if: ${{ matrix.job.strip }}
      run: strip target/${{ matrix.job.target }}/release/${{ matrix.job.artifact_name }}
    - name: Copy binaries to working dir
      shell: bash
      run: |
        mkdir qsv-${{ needs.analyze-tags.outputs.previous-tag }}
        cp target/${{ matrix.job.target }}/release/${{ matrix.job.artifact_name }} qsv-${{ needs.analyze-tags.outputs.previous-tag }}        
    - name: zip compress binary
      if: ${{ matrix.job.upx == false }}    
      run: 7z a -tzip ${{ matrix.job.asset_name }} ./qsv-${{ needs.analyze-tags.outputs.previous-tag }}/${{ matrix.job.artifact_name }} -mx=9 -mmt=on -mpass=7
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.job.asset_name }}
        asset_name: ${{ matrix.job.asset_name }}
        overwrite: true
        tag: ${{ needs.analyze-tags.outputs.previous-tag }}    
 